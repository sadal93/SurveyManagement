syntax = "proto3";

package api;

message Question{

    message AnswerOptions{
        OpenOptions openOptions = 1;
        SingleOption singleOption = 2;
        MultipleOptions multipleOptions = 3;
        repeated MatrixOptions matrixOptions = 4;
        repeated HideQuestion hideQuestion = 5;
    }

    message OpenOptions{
        string dataType = 1;
        string openAnswer = 2;
        int32 limit = 3;
    }

    message Options{
        repeated string optionText = 1;
    }

    message SingleOption{
        map<string, Options> options = 1;
        string selectedOption = 2;
    }

    message MultipleOptions{
        map<string, Options> options = 1;
        repeated string selectedOptions = 2;
    }

    message MatrixOptions{
        map <string, string> text = 1;
        map<string, Options> options = 2;
        string selectedOption = 3;
    }

    message HideQuestion{
        string selectedOption = 1;
        string question = 2;
    }

    message QuestionWithLanguage {
        map<string, string> text = 2;
        map<string, bytes> image = 3;
        AnswerOptions answerOptions = 4;
    }

    string id = 1;
    string type = 2;
    QuestionWithLanguage questionWithLanguage = 4;

}

message QuestionID{
    string questionID = 1;
}

message SurveyID{
    string surveyID = 1;
}

message QuestionArray{
    repeated Question questions = 1;
}

message SurveyArray{
    repeated SurveyData surveys = 1;
}

message EmptySurvey{

}

message SurveyData{

    string id = 1;
    string description = 2;
    string type = 3;
    string study = 4;
    repeated Question questions = 5;
}


service Survey{
    rpc CreateSurvey (SurveyData) returns (SurveyData);
    rpc DeleteSurvey (SurveyID) returns (EmptySurvey);
    rpc GetSurvey (SurveyID) returns (SurveyData);
    rpc GetAllSurveys (EmptySurvey) returns (SurveyArray);

    rpc CreateQuestion (Question) returns (Question);
    rpc DeleteQuestion (QuestionID) returns (EmptySurvey);
    rpc GetQuestion (QuestionID) returns (Question);
    rpc GetAllQuestions (EmptySurvey) returns (QuestionArray);

}
// Code generated by protoc-gen-go. DO NOT EDIT.
// source: survey.proto

package api

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Question struct {
	Id                   string                  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Language             string                  `protobuf:"bytes,2,opt,name=language,proto3" json:"language,omitempty"`
	Text                 string                  `protobuf:"bytes,3,opt,name=text,proto3" json:"text,omitempty"`
	Type                 string                  `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	AnswerOptions        *Question_AnswerOptions `protobuf:"bytes,5,opt,name=answerOptions,proto3" json:"answerOptions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *Question) Reset()         { *m = Question{} }
func (m *Question) String() string { return proto.CompactTextString(m) }
func (*Question) ProtoMessage()    {}
func (*Question) Descriptor() ([]byte, []int) {
	return fileDescriptor_a40f94eaa8e6ca46, []int{0}
}

func (m *Question) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Question.Unmarshal(m, b)
}
func (m *Question) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Question.Marshal(b, m, deterministic)
}
func (m *Question) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Question.Merge(m, src)
}
func (m *Question) XXX_Size() int {
	return xxx_messageInfo_Question.Size(m)
}
func (m *Question) XXX_DiscardUnknown() {
	xxx_messageInfo_Question.DiscardUnknown(m)
}

var xxx_messageInfo_Question proto.InternalMessageInfo

func (m *Question) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Question) GetLanguage() string {
	if m != nil {
		return m.Language
	}
	return ""
}

func (m *Question) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

func (m *Question) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Question) GetAnswerOptions() *Question_AnswerOptions {
	if m != nil {
		return m.AnswerOptions
	}
	return nil
}

type Question_AnswerOptions struct {
	DataType             string                    `protobuf:"bytes,1,opt,name=dataType,proto3" json:"dataType,omitempty"`
	Value                string                    `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	MultipleOptions      []string                  `protobuf:"bytes,3,rep,name=multipleOptions,proto3" json:"multipleOptions,omitempty"`
	MatrixOptions        []*Question_MatrixOptions `protobuf:"bytes,4,rep,name=matrixOptions,proto3" json:"matrixOptions,omitempty"`
	NextQuestion         []*Question_NextQuestion  `protobuf:"bytes,5,rep,name=nextQuestion,proto3" json:"nextQuestion,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *Question_AnswerOptions) Reset()         { *m = Question_AnswerOptions{} }
func (m *Question_AnswerOptions) String() string { return proto.CompactTextString(m) }
func (*Question_AnswerOptions) ProtoMessage()    {}
func (*Question_AnswerOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_a40f94eaa8e6ca46, []int{0, 0}
}

func (m *Question_AnswerOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Question_AnswerOptions.Unmarshal(m, b)
}
func (m *Question_AnswerOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Question_AnswerOptions.Marshal(b, m, deterministic)
}
func (m *Question_AnswerOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Question_AnswerOptions.Merge(m, src)
}
func (m *Question_AnswerOptions) XXX_Size() int {
	return xxx_messageInfo_Question_AnswerOptions.Size(m)
}
func (m *Question_AnswerOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_Question_AnswerOptions.DiscardUnknown(m)
}

var xxx_messageInfo_Question_AnswerOptions proto.InternalMessageInfo

func (m *Question_AnswerOptions) GetDataType() string {
	if m != nil {
		return m.DataType
	}
	return ""
}

func (m *Question_AnswerOptions) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *Question_AnswerOptions) GetMultipleOptions() []string {
	if m != nil {
		return m.MultipleOptions
	}
	return nil
}

func (m *Question_AnswerOptions) GetMatrixOptions() []*Question_MatrixOptions {
	if m != nil {
		return m.MatrixOptions
	}
	return nil
}

func (m *Question_AnswerOptions) GetNextQuestion() []*Question_NextQuestion {
	if m != nil {
		return m.NextQuestion
	}
	return nil
}

type Question_MatrixOptions struct {
	Text                 string   `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	Options              []string `protobuf:"bytes,2,rep,name=options,proto3" json:"options,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Question_MatrixOptions) Reset()         { *m = Question_MatrixOptions{} }
func (m *Question_MatrixOptions) String() string { return proto.CompactTextString(m) }
func (*Question_MatrixOptions) ProtoMessage()    {}
func (*Question_MatrixOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_a40f94eaa8e6ca46, []int{0, 1}
}

func (m *Question_MatrixOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Question_MatrixOptions.Unmarshal(m, b)
}
func (m *Question_MatrixOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Question_MatrixOptions.Marshal(b, m, deterministic)
}
func (m *Question_MatrixOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Question_MatrixOptions.Merge(m, src)
}
func (m *Question_MatrixOptions) XXX_Size() int {
	return xxx_messageInfo_Question_MatrixOptions.Size(m)
}
func (m *Question_MatrixOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_Question_MatrixOptions.DiscardUnknown(m)
}

var xxx_messageInfo_Question_MatrixOptions proto.InternalMessageInfo

func (m *Question_MatrixOptions) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

func (m *Question_MatrixOptions) GetOptions() []string {
	if m != nil {
		return m.Options
	}
	return nil
}

type Question_NextQuestion struct {
	SelectedOption       string   `protobuf:"bytes,1,opt,name=selectedOption,proto3" json:"selectedOption,omitempty"`
	Question             string   `protobuf:"bytes,2,opt,name=question,proto3" json:"question,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Question_NextQuestion) Reset()         { *m = Question_NextQuestion{} }
func (m *Question_NextQuestion) String() string { return proto.CompactTextString(m) }
func (*Question_NextQuestion) ProtoMessage()    {}
func (*Question_NextQuestion) Descriptor() ([]byte, []int) {
	return fileDescriptor_a40f94eaa8e6ca46, []int{0, 2}
}

func (m *Question_NextQuestion) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Question_NextQuestion.Unmarshal(m, b)
}
func (m *Question_NextQuestion) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Question_NextQuestion.Marshal(b, m, deterministic)
}
func (m *Question_NextQuestion) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Question_NextQuestion.Merge(m, src)
}
func (m *Question_NextQuestion) XXX_Size() int {
	return xxx_messageInfo_Question_NextQuestion.Size(m)
}
func (m *Question_NextQuestion) XXX_DiscardUnknown() {
	xxx_messageInfo_Question_NextQuestion.DiscardUnknown(m)
}

var xxx_messageInfo_Question_NextQuestion proto.InternalMessageInfo

func (m *Question_NextQuestion) GetSelectedOption() string {
	if m != nil {
		return m.SelectedOption
	}
	return ""
}

func (m *Question_NextQuestion) GetQuestion() string {
	if m != nil {
		return m.Question
	}
	return ""
}

type QuestionID struct {
	QuestionID           string   `protobuf:"bytes,1,opt,name=questionID,proto3" json:"questionID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QuestionID) Reset()         { *m = QuestionID{} }
func (m *QuestionID) String() string { return proto.CompactTextString(m) }
func (*QuestionID) ProtoMessage()    {}
func (*QuestionID) Descriptor() ([]byte, []int) {
	return fileDescriptor_a40f94eaa8e6ca46, []int{1}
}

func (m *QuestionID) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QuestionID.Unmarshal(m, b)
}
func (m *QuestionID) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QuestionID.Marshal(b, m, deterministic)
}
func (m *QuestionID) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QuestionID.Merge(m, src)
}
func (m *QuestionID) XXX_Size() int {
	return xxx_messageInfo_QuestionID.Size(m)
}
func (m *QuestionID) XXX_DiscardUnknown() {
	xxx_messageInfo_QuestionID.DiscardUnknown(m)
}

var xxx_messageInfo_QuestionID proto.InternalMessageInfo

func (m *QuestionID) GetQuestionID() string {
	if m != nil {
		return m.QuestionID
	}
	return ""
}

type QuestionArray struct {
	Questions            []*Question `protobuf:"bytes,1,rep,name=questions,proto3" json:"questions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *QuestionArray) Reset()         { *m = QuestionArray{} }
func (m *QuestionArray) String() string { return proto.CompactTextString(m) }
func (*QuestionArray) ProtoMessage()    {}
func (*QuestionArray) Descriptor() ([]byte, []int) {
	return fileDescriptor_a40f94eaa8e6ca46, []int{2}
}

func (m *QuestionArray) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QuestionArray.Unmarshal(m, b)
}
func (m *QuestionArray) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QuestionArray.Marshal(b, m, deterministic)
}
func (m *QuestionArray) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QuestionArray.Merge(m, src)
}
func (m *QuestionArray) XXX_Size() int {
	return xxx_messageInfo_QuestionArray.Size(m)
}
func (m *QuestionArray) XXX_DiscardUnknown() {
	xxx_messageInfo_QuestionArray.DiscardUnknown(m)
}

var xxx_messageInfo_QuestionArray proto.InternalMessageInfo

func (m *QuestionArray) GetQuestions() []*Question {
	if m != nil {
		return m.Questions
	}
	return nil
}

type Language struct {
	Language             string   `protobuf:"bytes,1,opt,name=language,proto3" json:"language,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Language) Reset()         { *m = Language{} }
func (m *Language) String() string { return proto.CompactTextString(m) }
func (*Language) ProtoMessage()    {}
func (*Language) Descriptor() ([]byte, []int) {
	return fileDescriptor_a40f94eaa8e6ca46, []int{3}
}

func (m *Language) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Language.Unmarshal(m, b)
}
func (m *Language) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Language.Marshal(b, m, deterministic)
}
func (m *Language) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Language.Merge(m, src)
}
func (m *Language) XXX_Size() int {
	return xxx_messageInfo_Language.Size(m)
}
func (m *Language) XXX_DiscardUnknown() {
	xxx_messageInfo_Language.DiscardUnknown(m)
}

var xxx_messageInfo_Language proto.InternalMessageInfo

func (m *Language) GetLanguage() string {
	if m != nil {
		return m.Language
	}
	return ""
}

type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_a40f94eaa8e6ca46, []int{4}
}

func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (m *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(m, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

type SurveyData struct {
	Id                   string      `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Description          string      `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Questions            []*Question `protobuf:"bytes,3,rep,name=questions,proto3" json:"questions,omitempty"`
	Study                []string    `protobuf:"bytes,4,rep,name=study,proto3" json:"study,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *SurveyData) Reset()         { *m = SurveyData{} }
func (m *SurveyData) String() string { return proto.CompactTextString(m) }
func (*SurveyData) ProtoMessage()    {}
func (*SurveyData) Descriptor() ([]byte, []int) {
	return fileDescriptor_a40f94eaa8e6ca46, []int{5}
}

func (m *SurveyData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SurveyData.Unmarshal(m, b)
}
func (m *SurveyData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SurveyData.Marshal(b, m, deterministic)
}
func (m *SurveyData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SurveyData.Merge(m, src)
}
func (m *SurveyData) XXX_Size() int {
	return xxx_messageInfo_SurveyData.Size(m)
}
func (m *SurveyData) XXX_DiscardUnknown() {
	xxx_messageInfo_SurveyData.DiscardUnknown(m)
}

var xxx_messageInfo_SurveyData proto.InternalMessageInfo

func (m *SurveyData) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *SurveyData) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *SurveyData) GetQuestions() []*Question {
	if m != nil {
		return m.Questions
	}
	return nil
}

func (m *SurveyData) GetStudy() []string {
	if m != nil {
		return m.Study
	}
	return nil
}

func init() {
	proto.RegisterType((*Question)(nil), "api.Question")
	proto.RegisterType((*Question_AnswerOptions)(nil), "api.Question.AnswerOptions")
	proto.RegisterType((*Question_MatrixOptions)(nil), "api.Question.MatrixOptions")
	proto.RegisterType((*Question_NextQuestion)(nil), "api.Question.NextQuestion")
	proto.RegisterType((*QuestionID)(nil), "api.QuestionID")
	proto.RegisterType((*QuestionArray)(nil), "api.QuestionArray")
	proto.RegisterType((*Language)(nil), "api.Language")
	proto.RegisterType((*Empty)(nil), "api.Empty")
	proto.RegisterType((*SurveyData)(nil), "api.SurveyData")
}

func init() { proto.RegisterFile("survey.proto", fileDescriptor_a40f94eaa8e6ca46) }

var fileDescriptor_a40f94eaa8e6ca46 = []byte{
	// 485 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x54, 0x5d, 0x6b, 0xdb, 0x30,
	0x14, 0x45, 0x71, 0xd2, 0x26, 0x37, 0x71, 0x02, 0x97, 0x3d, 0x18, 0x0d, 0x86, 0xf1, 0x43, 0x09,
	0x6c, 0x35, 0x5b, 0xf7, 0xba, 0x0d, 0xc2, 0x32, 0x4a, 0x61, 0x1f, 0xd4, 0xdb, 0x1f, 0xd0, 0xea,
	0x4b, 0x31, 0x38, 0x89, 0x6a, 0xcb, 0x5d, 0xfc, 0xb8, 0x1f, 0xb3, 0xbf, 0xb7, 0x3f, 0xb0, 0x97,
	0x61, 0xd9, 0x72, 0x25, 0x97, 0xed, 0x2d, 0xe7, 0xf8, 0xe8, 0xdc, 0xa3, 0xab, 0x43, 0x60, 0x51,
	0x56, 0xc5, 0x3d, 0xd5, 0xb1, 0x2c, 0x0e, 0xea, 0x80, 0x9e, 0x90, 0x59, 0xf4, 0x6b, 0x0c, 0xd3,
	0xeb, 0x8a, 0x4a, 0x95, 0x1d, 0xf6, 0xb8, 0x84, 0x51, 0x96, 0x06, 0x2c, 0x64, 0xeb, 0x59, 0x32,
	0xca, 0x52, 0xe4, 0x30, 0xcd, 0xc5, 0xfe, 0xb6, 0x12, 0xb7, 0x14, 0x8c, 0x34, 0xdb, 0x63, 0x44,
	0x18, 0x2b, 0x3a, 0xaa, 0xc0, 0xd3, 0xbc, 0xfe, 0xad, 0xb9, 0x5a, 0x52, 0x30, 0xee, 0xb8, 0x5a,
	0x12, 0x6e, 0xc0, 0x17, 0xfb, 0xf2, 0x07, 0x15, 0x5f, 0x64, 0x33, 0xa3, 0x0c, 0x26, 0x21, 0x5b,
	0xcf, 0x2f, 0x9e, 0xc6, 0x42, 0x66, 0xb1, 0x99, 0x1c, 0x6f, 0x6c, 0x49, 0xe2, 0x9e, 0xe0, 0xbf,
	0x19, 0xf8, 0x8e, 0xa0, 0x09, 0x96, 0x0a, 0x25, 0xbe, 0x35, 0xc3, 0xda, 0xb8, 0x3d, 0xc6, 0x27,
	0x30, 0xb9, 0x17, 0x79, 0x65, 0x12, 0xb7, 0x00, 0xd7, 0xb0, 0xda, 0x55, 0xb9, 0xca, 0x64, 0x4e,
	0x26, 0x88, 0x17, 0x7a, 0xeb, 0x59, 0x32, 0xa4, 0x9b, 0xc0, 0x3b, 0xa1, 0x8a, 0xec, 0x68, 0x74,
	0xe3, 0xd0, 0x7b, 0x1c, 0xf8, 0x93, 0x2d, 0x49, 0xdc, 0x13, 0xf8, 0x0e, 0x16, 0x7b, 0x3a, 0x2a,
	0x23, 0x0e, 0x26, 0xda, 0x81, 0xbb, 0x0e, 0x9f, 0x2d, 0x45, 0xe2, 0xe8, 0xf9, 0x5b, 0xf0, 0x1d,
	0xff, 0x7e, 0xd9, 0xcc, 0x5a, 0x76, 0x00, 0xa7, 0x87, 0x2e, 0xe1, 0x48, 0xdf, 0xc4, 0x40, 0x9e,
	0xc0, 0xc2, 0x36, 0xc7, 0x33, 0x58, 0x96, 0x94, 0xd3, 0x8d, 0xa2, 0xb4, 0x35, 0xec, 0x7c, 0x06,
	0x6c, 0xb3, 0xd5, 0x3b, 0x13, 0xb9, 0x7b, 0x6e, 0x83, 0xa3, 0x17, 0x00, 0xc6, 0xef, 0x6a, 0x8b,
	0xcf, 0x00, 0xee, 0x7a, 0xd4, 0xb9, 0x59, 0x4c, 0xf4, 0x06, 0x7c, 0xa3, 0xde, 0x14, 0x85, 0xa8,
	0xf1, 0x39, 0xcc, 0xcc, 0xe7, 0x32, 0x60, 0x7a, 0x1d, 0xbe, 0xb3, 0x8e, 0xe4, 0xe1, 0x7b, 0x74,
	0x06, 0xd3, 0x8f, 0xa6, 0x66, 0x76, 0x05, 0x99, 0x5b, 0xc1, 0xe8, 0x14, 0x26, 0x1f, 0x76, 0x52,
	0xd5, 0xd1, 0x4f, 0x06, 0xf0, 0x55, 0x57, 0x7b, 0x2b, 0x94, 0x78, 0x54, 0xe3, 0x10, 0xe6, 0x29,
	0x95, 0x37, 0x45, 0x26, 0xad, 0xab, 0xd9, 0x94, 0x1b, 0xcf, 0xfb, 0x7f, 0xbc, 0xa6, 0x60, 0xa5,
	0xaa, 0xd2, 0x5a, 0x17, 0x63, 0x96, 0xb4, 0xe0, 0xe2, 0x0f, 0x83, 0x93, 0x36, 0x03, 0xbe, 0x84,
	0xc5, 0xfb, 0x82, 0x84, 0xa2, 0x0e, 0xaf, 0xb4, 0xd5, 0x43, 0x40, 0x3e, 0x24, 0x30, 0x86, 0x65,
	0x7b, 0xa2, 0x7f, 0x33, 0x77, 0x3c, 0x77, 0x21, 0x9e, 0xc3, 0x72, 0x4b, 0x39, 0x59, 0xfa, 0x95,
	0x23, 0xb8, 0xda, 0x72, 0xd0, 0x84, 0xde, 0x0f, 0x9e, 0xc3, 0xfc, 0x92, 0xd4, 0xbf, 0xb5, 0x03,
	0xf7, 0x57, 0xb0, 0xba, 0x24, 0xb5, 0xc9, 0xf3, 0xeb, 0xfe, 0xce, 0x96, 0x1b, 0x47, 0x47, 0xad,
	0xdf, 0xf7, 0xfb, 0x89, 0xfe, 0x4b, 0x79, 0xfd, 0x37, 0x00, 0x00, 0xff, 0xff, 0x4d, 0x96, 0x39,
	0xcc, 0x62, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// SurveyClient is the client API for Survey service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SurveyClient interface {
	CreateSurvey(ctx context.Context, in *SurveyData, opts ...grpc.CallOption) (*SurveyData, error)
	CreateQuestion(ctx context.Context, in *Question, opts ...grpc.CallOption) (*Question, error)
	DeleteQuestion(ctx context.Context, in *QuestionID, opts ...grpc.CallOption) (*Empty, error)
	GetQuestion(ctx context.Context, in *QuestionID, opts ...grpc.CallOption) (*Question, error)
	GetAllQuestions(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*QuestionArray, error)
}

type surveyClient struct {
	cc *grpc.ClientConn
}

func NewSurveyClient(cc *grpc.ClientConn) SurveyClient {
	return &surveyClient{cc}
}

func (c *surveyClient) CreateSurvey(ctx context.Context, in *SurveyData, opts ...grpc.CallOption) (*SurveyData, error) {
	out := new(SurveyData)
	err := c.cc.Invoke(ctx, "/api.Survey/CreateSurvey", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *surveyClient) CreateQuestion(ctx context.Context, in *Question, opts ...grpc.CallOption) (*Question, error) {
	out := new(Question)
	err := c.cc.Invoke(ctx, "/api.Survey/CreateQuestion", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *surveyClient) DeleteQuestion(ctx context.Context, in *QuestionID, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/api.Survey/DeleteQuestion", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *surveyClient) GetQuestion(ctx context.Context, in *QuestionID, opts ...grpc.CallOption) (*Question, error) {
	out := new(Question)
	err := c.cc.Invoke(ctx, "/api.Survey/GetQuestion", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *surveyClient) GetAllQuestions(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*QuestionArray, error) {
	out := new(QuestionArray)
	err := c.cc.Invoke(ctx, "/api.Survey/GetAllQuestions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SurveyServer is the server API for Survey service.
type SurveyServer interface {
	CreateSurvey(context.Context, *SurveyData) (*SurveyData, error)
	CreateQuestion(context.Context, *Question) (*Question, error)
	DeleteQuestion(context.Context, *QuestionID) (*Empty, error)
	GetQuestion(context.Context, *QuestionID) (*Question, error)
	GetAllQuestions(context.Context, *Empty) (*QuestionArray, error)
}

// UnimplementedSurveyServer can be embedded to have forward compatible implementations.
type UnimplementedSurveyServer struct {
}

func (*UnimplementedSurveyServer) CreateSurvey(ctx context.Context, req *SurveyData) (*SurveyData, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateSurvey not implemented")
}
func (*UnimplementedSurveyServer) CreateQuestion(ctx context.Context, req *Question) (*Question, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateQuestion not implemented")
}
func (*UnimplementedSurveyServer) DeleteQuestion(ctx context.Context, req *QuestionID) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteQuestion not implemented")
}
func (*UnimplementedSurveyServer) GetQuestion(ctx context.Context, req *QuestionID) (*Question, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetQuestion not implemented")
}
func (*UnimplementedSurveyServer) GetAllQuestions(ctx context.Context, req *Empty) (*QuestionArray, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAllQuestions not implemented")
}

func RegisterSurveyServer(s *grpc.Server, srv SurveyServer) {
	s.RegisterService(&_Survey_serviceDesc, srv)
}

func _Survey_CreateSurvey_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SurveyData)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SurveyServer).CreateSurvey(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Survey/CreateSurvey",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SurveyServer).CreateSurvey(ctx, req.(*SurveyData))
	}
	return interceptor(ctx, in, info, handler)
}

func _Survey_CreateQuestion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Question)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SurveyServer).CreateQuestion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Survey/CreateQuestion",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SurveyServer).CreateQuestion(ctx, req.(*Question))
	}
	return interceptor(ctx, in, info, handler)
}

func _Survey_DeleteQuestion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QuestionID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SurveyServer).DeleteQuestion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Survey/DeleteQuestion",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SurveyServer).DeleteQuestion(ctx, req.(*QuestionID))
	}
	return interceptor(ctx, in, info, handler)
}

func _Survey_GetQuestion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QuestionID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SurveyServer).GetQuestion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Survey/GetQuestion",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SurveyServer).GetQuestion(ctx, req.(*QuestionID))
	}
	return interceptor(ctx, in, info, handler)
}

func _Survey_GetAllQuestions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SurveyServer).GetAllQuestions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Survey/GetAllQuestions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SurveyServer).GetAllQuestions(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _Survey_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.Survey",
	HandlerType: (*SurveyServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateSurvey",
			Handler:    _Survey_CreateSurvey_Handler,
		},
		{
			MethodName: "CreateQuestion",
			Handler:    _Survey_CreateQuestion_Handler,
		},
		{
			MethodName: "DeleteQuestion",
			Handler:    _Survey_DeleteQuestion_Handler,
		},
		{
			MethodName: "GetQuestion",
			Handler:    _Survey_GetQuestion_Handler,
		},
		{
			MethodName: "GetAllQuestions",
			Handler:    _Survey_GetAllQuestions_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "survey.proto",
}
